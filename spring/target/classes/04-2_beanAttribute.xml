<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	<!-- init-method 속성 : Spring Bean 생성 후 한번만 자동 호출되어 초기화 작업을 수행하는 메소드이름을 속성값으로 설정 -->
	<!-- destroy-method 속성 : Spring Bean 소멸 전 한번만 자동 호출되어 마무리 작업을 수행하는 메소드이름을 속성값으로 설정 -->
	<bean id="initDestroyMethodBean" class="site.itwill04.bean.InitDestroyMethodBean"
		init-method="init" destroy-method="destroy"/>
		
	<!-- lazy-init 속성 : 거짓(false : 기본) 또는 참(true)을 속성값으로 설정 -->
	<!-- => 속성값이 false인 경우 Spring Container 초기화 할 때 Spring Bean 생성 -->	
	<!-- => 속성값이 true인 경우 Spring Container 초기화 할 때 Spring Bean 미생성 - getBean() 메소드 호출시 Spring Bean 생성 -->	
	<bean id="lazyInitBean" class="site.itwill04.bean.LazyInitBean" lazy-init="true"/>
	
	<!-- 생성자가 은닉화 선언되어 있어도 Spring Container는 생성자를 호출하여 Spring Bean 생성 가능 -->
	<!-- 문제점)싱글톤 디자인 패턴이 적용된 클래스는 Spring Container와 Class Loader에 의해 인스턴스가 2개 생성 -->
	<!-- => 싱글톤 클래스는 인스턴스를 하나만 제공하기 위한 작성된 클래스 -->
	<!-- => 해결법) bean 엘리먼트에 factory-method 속성 사용 -->
	<!-- factory-method 속성 : 싱글톤 클래스에서 인스턴스를 반환하는 메소드 이름을 속성값으로 설정 -->
	<!-- => Class Loader에 의해 생성된 인스턴스를 Spring Bean으로 제공 -->
	<bean id="factoryMethodBean" class="site.itwill04.bean.FactoryMethodBean" factory-method="getFactoryMethodBean"/>
	
	<!-- scope 속성 : String Bean 사용 범위(request OR session) 또는 Spring 생성 갯수(singleton : 기본 OR prototype) 중 하나를 속성값으로 설정 -->
	<!-- scope 속성값이 singleton인 경우 Spring Bean를 하나만 생성 -->
	<bean id="singletonBean" class="site.itwill04.bean.ScopeBean" lazy-init="true" scope="singleton"/>
	
	<!-- scope 속성값이 prototype인 경우 Spring Bean를 여러개 생성 -->
	<!-- => lazy-init 속성값이 반드시 true로 설정되어야만 사용 가능 -->
	<bean id="prototypeBean" class="site.itwill04.bean.ScopeBean" lazy-init="true" scope="prototype"/>
	
	<!-- 클래스를 Spring Bean으로 등록하여 생성하는 것이 목적인 경우 id(name) 속성 생략 가능 -->
	<!-- bean 엘리먼트 선언 순서대로 String Bean 생성 -->
	<!--  
	<bean class="site.itwill04.bean.DependsOnDaoBean"/>
	<bean class="site.itwill04.bean.DependsOnServiceBean"/>
	-->

	<!-- depends-on 속성 : Spring Bean 생성 전 먼저 생성될 Spring Bean의 beanName을 속성값으로 설정 -->
	<bean class="site.itwill04.bean.DependsOnServiceBean" depends-on="dependsOnDaoBean"/>
	<bean id="dependsOnDaoBean" class="site.itwill04.bean.DependsOnDaoBean"/>
</beans>








