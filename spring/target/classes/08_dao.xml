<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	<!-- PropertyPlaceholderConfigurer : Properties 파일을 읽어 Bean Configuration File에서 사용할 수 있도록 제공하는 클래스 -->
	<!-- => ${Key} 형식으로 표현하면 해당 값(Value)으로 사용 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<!-- 프로젝트에 빌드된 패키지에 존재하는 Properties 파일인 경우 -->
		<!-- <property name="locations" value="site/itwill08/dao/db.properties"/> -->
		<!-- 프로젝트에 빌드되지 않은 패키지에 존재하는 Properties 파일인 경우 -->
		<property name="locations" value="classpath:site/itwill08/dao/db.properties"/>
	</bean>

	<bean id="apacheDataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<!-- 
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<property name="username" value="scott"/>
		<property name="password" value="tiger"/>
		-->
		<property name="driverClassName" value="${driver}"/>
		<property name="url" value="${url}"/>
		<property name="username" value="${user}"/>
		<property name="password" value="${passwd}"/>
	</bean>
	
	<bean id="springDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<!-- 
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<property name="username" value="scott"/>
		<property name="password" value="tiger"/>
		-->
		<property name="driverClassName" value="${driver}"/>
		<property name="url" value="${url}"/>
		<property name="username" value="${user}"/>
		<property name="password" value="${passwd}"/> 
	</bean>
	
	<bean id="studentJdbcDAO" class="site.itwill08.dao.StudentJdbcDAO">
		<property name="dataSource" ref="apacheDataSource"/>
	</bean>
	
	<bean id="studentService" class="site.itwill08.dao.StudentServiceImpl">
		<!-- <property name="studentDAO" ref="studentJdbcDAO"/> -->
		<!-- <property name="studentDAO" ref="studentSpringDAO"/>  -->
		<property name="studentDAO" ref="studentSpringSupportDAO"/>
	</bean>
	
	<!-- JdbcTemplate 클래스를 Spring Bean으로 등록 -->
	<!-- JdbcTemplate : DAO 클래스 작성에 필요한 템플릿 메소드를 제공하는 클래스 -->
	<!-- => dateSource 필드에 DataSource 관련 Spring bean에 대한 인젝션 처리 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="springDataSource"/>
	</bean>
	
	<bean id="studentSpringDAO" class="site.itwill08.dao.StudentSpringDAO">
		<property name="jdbcTemplate" ref="jdbcTemplate"/>
	</bean>
	
	<!-- 상속받은 JdbcDaoSupport 클래스의 필드에 JdbcTemplate 관련 Spring Bean 인젝션 -->
	<bean id="studentSpringSupportDAO" class="site.itwill08.dao.StudentSpringSupportDAO">
		<property name="jdbcTemplate" ref="jdbcTemplate"/>
	</bean>
</beans>





